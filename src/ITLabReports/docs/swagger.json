{
    "swagger": "2.0",
    "info": {
        "description": "This is server to work with reports\n\n[Source-code repository](https://github.com/RTUITLab/ITLab-Reports-Back)\n\nAll endpoints error have next structer\n\n```js\n{\n    \"error\": \"some_error\"\n}\n```",
        "title": "ITLab-Reports API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api",
    "paths": {
        "/reports": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "# Description \n\n**Return a list of reports**\n\n## If you are admin\nreturn a list of reports of all user\n\n## If you are a user\nreturn a list of your reports\n\n## Params\n### Query\n1. `sorted_by` - sort by `name` or `date`. In both sort ascending\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "get report list",
                "parameters": [
                    {
                        "enum": [
                            "name",
                            "date"
                        ],
                        "type": "string",
                        "description": "sort by this field",
                        "name": "sorted_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GetReportResp"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create report\n# Description \n\n**Create a report**\n\nHave `implementer` query param that Indicates who the report is about, if not specifed - by default it's you.\n\n`name` field is optional so you can create report with two ways:\n\n## Creating by only ```text``` field\n\nTo create by only text field you should to set in text field ```name``` of report and field ```text``` and separet it with ```@\\n\\t\\n@```\nFor example next body will create report with ```name``` report_text and with ```text``` report text\n```json\n{\n    \"text\": \"report_text@\\n\\t\\n@report_text\"\n}\n```\n\n## Creating by ```text``` and ```name``` fields\n\nIt's more **preferred** method just send next body:\n```json\n{\n    \"name\": \"report_name\",\n    \"text\": \"report_text\"\n}\n```\n\n# Errors\n\n## 400 Bad request\n1. If `name` and `text` fields is empty\n2. If `name` is not empty, `text` is empty\n\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "create report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "implemnter user id",
                        "name": "implementer",
                        "in": "query"
                    },
                    {
                        "description": "body",
                        "name": "report",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateReportReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateReportResp"
                        }
                    }
                }
            }
        },
        "/reports/employee/{employee}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "# Description \n\n**Return reports list for employee**\n\n# Errors\n## 400 Bad request\n1. If employee path param is empty\nexample on: \n```\n/reports/employee/\n```\n\n## 403 Forbiden\n1. If you try to get reports of another user and you are not admin \n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "get reports for employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "begin date of reports",
                        "name": "dateBegin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "end date of reports",
                        "name": "dateEnd",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "employee user id",
                        "name": "employee",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GetReportResp"
                            }
                        }
                    }
                }
            }
        },
        "/reports/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "# Description \n\n**Return a report**\n\n# Errors\n## 404 Not found\n1. If report is not found\n\n## 400 Bad request\n1. If `id` param is not valid\n\n## 403 Forbiden\n1. If you try to get report of another user and you are not admin \n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "return report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of report",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetReportResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateReportReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "dto.CreateReportResp": {
            "type": "object",
            "properties": {
                "assignees": {
                    "$ref": "#/definitions/dto.GetAssigneesResp"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "dto.GetAssigneesResp": {
            "type": "object",
            "properties": {
                "implementer": {
                    "type": "string"
                },
                "reporter": {
                    "type": "string"
                }
            }
        },
        "dto.GetReportResp": {
            "type": "object",
            "properties": {
                "assignees": {
                    "$ref": "#/definitions/dto.GetAssigneesResp"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}