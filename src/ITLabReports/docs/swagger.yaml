basePath: /api
definitions:
  dto.CreateReportReq:
    properties:
      name:
        type: string
      text:
        type: string
    type: object
  dto.CreateReportResp:
    properties:
      assignees:
        $ref: '#/definitions/dto.GetAssigneesResp'
      date:
        type: string
      id:
        type: string
      name:
        type: string
      text:
        type: string
    type: object
  dto.GetAssigneesResp:
    properties:
      implementer:
        type: string
      reporter:
        type: string
    type: object
  dto.GetReportResp:
    properties:
      assignees:
        $ref: '#/definitions/dto.GetAssigneesResp'
      date:
        type: string
      id:
        type: string
      name:
        type: string
      text:
        type: string
    type: object
info:
  contact: {}
  description: |-
    This is server to work with reports

    [Source-code repository](https://github.com/RTUITLab/ITLab-Reports-Back)

    All endpoints error have next structer

    ```js
    {
        "error": "some_error"
    }
    ```
  title: ITLab-Reports API
  version: "1.0"
paths:
  /reports:
    get:
      description: "# Description \n\n**Return a list of reports**\n\n## If you are
        admin\nreturn a list of reports of all user\n\n## If you are a user\nreturn
        a list of your reports\n\n## Params\n### Query\n1. `sorted_by` - sort by `name`
        or `date`. In both sort ascending\n"
      parameters:
      - description: sort by this field
        enum:
        - name
        - date
        in: query
        name: sorted_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.GetReportResp'
            type: array
      security:
      - ApiKeyAuth: []
      summary: get report list
      tags:
      - reports
    post:
      description: "create report\n# Description \n\n**Create a report**\n\nHave `implementer`
        query param that Indicates who the report is about, if not specifed - by default
        it's you.\n\n`name` field is optional so you can create report with two ways:\n\n##
        Creating by only ```text``` field\n\nTo create by only text field you should
        to set in text field ```name``` of report and field ```text``` and separet
        it with ```@\\n\\t\\n@```\nFor example next body will create report with ```name```
        report_text and with ```text``` report text\n```json\n{\n    \"text\": \"report_text@\\n\\t\\n@report_text\"\n}\n```\n\n##
        Creating by ```text``` and ```name``` fields\n\nIt's more **preferred** method
        just send next body:\n```json\n{\n    \"name\": \"report_name\",\n    \"text\":
        \"report_text\"\n}\n```\n\n# Errors\n\n## 400 Bad request\n1. If `name` and
        `text` fields is empty\n2. If `name` is not empty, `text` is empty\n\n"
      parameters:
      - description: implemnter user id
        in: query
        name: implementer
        type: string
      - description: body
        in: body
        name: report
        required: true
        schema:
          $ref: '#/definitions/dto.CreateReportReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateReportResp'
      security:
      - ApiKeyAuth: []
      summary: create report
      tags:
      - reports
  /reports/{id}:
    get:
      description: "# Description \n\n**Return a report**\n\n# Errors\n## 404 Not
        found\n1. If report is not found\n\n## 400 Bad request\n1. If `id` param is
        not valid\n\n## 403 Forbiden\n1. If you try to get report of another user
        and you are not admin \n"
      parameters:
      - description: id of report
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetReportResp'
      security:
      - ApiKeyAuth: []
      summary: return report
      tags:
      - reports
  /reports/employee/{employee}:
    get:
      description: "# Description \n\n**Return reports list for employee**\n\n# Errors\n##
        400 Bad request\n1. If employee path param is empty\nexample on: \n```\n/reports/employee/\n```\n\n##
        403 Forbiden\n1. If you try to get reports of another user and you are not
        admin \n"
      parameters:
      - description: begin date of reports
        in: query
        name: dateBegin
        type: string
      - description: end date of reports
        in: query
        name: dateEnd
        type: string
      - description: employee user id
        in: path
        name: employee
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.GetReportResp'
            type: array
      security:
      - ApiKeyAuth: []
      summary: get reports for employee
      tags:
      - reports
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
