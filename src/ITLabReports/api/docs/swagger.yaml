basePath: /api
definitions:
  models.Assignees:
    properties:
      implementer:
        type: string
      reporter:
        type: string
    type: object
  models.Report:
    properties:
      archived:
        type: boolean
      assignees:
        $ref: '#/definitions/models.Assignees'
      date:
        type: string
      id:
        type: string
      text:
        type: string
    type: object
  server.CreateReportRequest:
    properties:
      text:
        type: string
    type: object
  server.CreateReportResponce:
    properties:
      archived:
        type: boolean
      assignees:
        $ref: '#/definitions/models.Assignees'
      date:
        type: string
      id:
        type: string
      text:
        type: string
    type: object
info:
  contact: {}
  description: This is a server to work with reports
  title: ITLab-Reports API
  version: "1.0"
paths:
  /reports:
    get:
      parameters:
      - description: sort by this field
        enum:
        - name
        - date
        in: query
        name: sorted_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Report'
            type: array
      security:
      - ApiKeyAuth: []
      summary: get report list
      tags:
      - reports
    post:
      description: |-
        create report
        query value implementor indicate who make things described in report
        if implementor is not specified report-maker is implementor
      parameters:
      - description: implemntor user id
        in: query
        name: implementor
        type: string
      - description: body
        in: body
        name: report
        required: true
        schema:
          $ref: '#/definitions/server.CreateReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.CreateReportResponce'
      security:
      - ApiKeyAuth: []
      summary: create report
      tags:
      - reports
  /reports/{id}:
    get:
      parameters:
      - description: id of report
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Report'
      security:
      - ApiKeyAuth: []
      summary: get report
      tags:
      - reports
  /reports/archived:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Report'
            type: array
      security:
      - ApiKeyAuth: []
      summary: get archived reports
      tags:
      - reports
  /reports/employee/{employee}:
    get:
      description: get reports for current employee
      parameters:
      - description: begin date of reports
        in: query
        name: dateBegin
        type: string
      - description: end date of reports
        in: query
        name: dateEnd
        type: string
      - description: employee user id
        in: path
        name: employee
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Report'
            type: array
      security:
      - ApiKeyAuth: []
      summary: get reports for employee
      tags:
      - reports
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
