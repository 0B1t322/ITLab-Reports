// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.19.4
// source: rtuitlab/itlab/reports/v1/reports.proto

package services

import (
	types "github.com/RTUITLab/ITLab/proto/reports/types"
	shared "github.com/RTUITLab/ITLab/proto/shared"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ReportsServiceErrors int32

const (
	ReportsServiceErrors_REPORT_NOT_FOUND ReportsServiceErrors = 0
)

// Enum value maps for ReportsServiceErrors.
var (
	ReportsServiceErrors_name = map[int32]string{
		0: "REPORT_NOT_FOUND",
	}
	ReportsServiceErrors_value = map[string]int32{
		"REPORT_NOT_FOUND": 0,
	}
)

func (x ReportsServiceErrors) Enum() *ReportsServiceErrors {
	p := new(ReportsServiceErrors)
	*p = x
	return p
}

func (x ReportsServiceErrors) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportsServiceErrors) Descriptor() protoreflect.EnumDescriptor {
	return file_rtuitlab_itlab_reports_v1_reports_proto_enumTypes[0].Descriptor()
}

func (ReportsServiceErrors) Type() protoreflect.EnumType {
	return &file_rtuitlab_itlab_reports_v1_reports_proto_enumTypes[0]
}

func (x ReportsServiceErrors) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportsServiceErrors.Descriptor instead.
func (ReportsServiceErrors) EnumDescriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{0}
}

type GetReportsReq_SortedBy int32

const (
	GetReportsReq_NAME GetReportsReq_SortedBy = 0
	GetReportsReq_DATE GetReportsReq_SortedBy = 1
)

// Enum value maps for GetReportsReq_SortedBy.
var (
	GetReportsReq_SortedBy_name = map[int32]string{
		0: "NAME",
		1: "DATE",
	}
	GetReportsReq_SortedBy_value = map[string]int32{
		"NAME": 0,
		"DATE": 1,
	}
)

func (x GetReportsReq_SortedBy) Enum() *GetReportsReq_SortedBy {
	p := new(GetReportsReq_SortedBy)
	*p = x
	return p
}

func (x GetReportsReq_SortedBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetReportsReq_SortedBy) Descriptor() protoreflect.EnumDescriptor {
	return file_rtuitlab_itlab_reports_v1_reports_proto_enumTypes[1].Descriptor()
}

func (GetReportsReq_SortedBy) Type() protoreflect.EnumType {
	return &file_rtuitlab_itlab_reports_v1_reports_proto_enumTypes[1]
}

func (x GetReportsReq_SortedBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetReportsReq_SortedBy.Descriptor instead.
func (GetReportsReq_SortedBy) EnumDescriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{4, 0}
}

type GetReportsPaginatedReq_FilterParams_PaidState int32

const (
	GetReportsPaginatedReq_FilterParams_ALL      GetReportsPaginatedReq_FilterParams_PaidState = 0
	GetReportsPaginatedReq_FilterParams_PAID     GetReportsPaginatedReq_FilterParams_PaidState = 1
	GetReportsPaginatedReq_FilterParams_NOT_PAID GetReportsPaginatedReq_FilterParams_PaidState = 2
)

// Enum value maps for GetReportsPaginatedReq_FilterParams_PaidState.
var (
	GetReportsPaginatedReq_FilterParams_PaidState_name = map[int32]string{
		0: "ALL",
		1: "PAID",
		2: "NOT_PAID",
	}
	GetReportsPaginatedReq_FilterParams_PaidState_value = map[string]int32{
		"ALL":      0,
		"PAID":     1,
		"NOT_PAID": 2,
	}
)

func (x GetReportsPaginatedReq_FilterParams_PaidState) Enum() *GetReportsPaginatedReq_FilterParams_PaidState {
	p := new(GetReportsPaginatedReq_FilterParams_PaidState)
	*p = x
	return p
}

func (x GetReportsPaginatedReq_FilterParams_PaidState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetReportsPaginatedReq_FilterParams_PaidState) Descriptor() protoreflect.EnumDescriptor {
	return file_rtuitlab_itlab_reports_v1_reports_proto_enumTypes[2].Descriptor()
}

func (GetReportsPaginatedReq_FilterParams_PaidState) Type() protoreflect.EnumType {
	return &file_rtuitlab_itlab_reports_v1_reports_proto_enumTypes[2]
}

func (x GetReportsPaginatedReq_FilterParams_PaidState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetReportsPaginatedReq_FilterParams_PaidState.Descriptor instead.
func (GetReportsPaginatedReq_FilterParams_PaidState) EnumDescriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{6, 0, 0}
}

type GetReportsPaginatedReq_OrderParams_OrderFields int32

const (
	GetReportsPaginatedReq_OrderParams_NAME GetReportsPaginatedReq_OrderParams_OrderFields = 0
	GetReportsPaginatedReq_OrderParams_DATE GetReportsPaginatedReq_OrderParams_OrderFields = 1
)

// Enum value maps for GetReportsPaginatedReq_OrderParams_OrderFields.
var (
	GetReportsPaginatedReq_OrderParams_OrderFields_name = map[int32]string{
		0: "NAME",
		1: "DATE",
	}
	GetReportsPaginatedReq_OrderParams_OrderFields_value = map[string]int32{
		"NAME": 0,
		"DATE": 1,
	}
)

func (x GetReportsPaginatedReq_OrderParams_OrderFields) Enum() *GetReportsPaginatedReq_OrderParams_OrderFields {
	p := new(GetReportsPaginatedReq_OrderParams_OrderFields)
	*p = x
	return p
}

func (x GetReportsPaginatedReq_OrderParams_OrderFields) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetReportsPaginatedReq_OrderParams_OrderFields) Descriptor() protoreflect.EnumDescriptor {
	return file_rtuitlab_itlab_reports_v1_reports_proto_enumTypes[3].Descriptor()
}

func (GetReportsPaginatedReq_OrderParams_OrderFields) Type() protoreflect.EnumType {
	return &file_rtuitlab_itlab_reports_v1_reports_proto_enumTypes[3]
}

func (x GetReportsPaginatedReq_OrderParams_OrderFields) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetReportsPaginatedReq_OrderParams_OrderFields.Descriptor instead.
func (GetReportsPaginatedReq_OrderParams_OrderFields) EnumDescriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{6, 1, 0}
}

type GetReportImplementerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportId string `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
}

func (x *GetReportImplementerReq) Reset() {
	*x = GetReportImplementerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportImplementerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportImplementerReq) ProtoMessage() {}

func (x *GetReportImplementerReq) ProtoReflect() protoreflect.Message {
	mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportImplementerReq.ProtoReflect.Descriptor instead.
func (*GetReportImplementerReq) Descriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{0}
}

func (x *GetReportImplementerReq) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

type GetReportImplementerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*GetReportImplementerResp_Implementer
	//	*GetReportImplementerResp_Error
	Result isGetReportImplementerResp_Result `protobuf_oneof:"result"`
}

func (x *GetReportImplementerResp) Reset() {
	*x = GetReportImplementerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportImplementerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportImplementerResp) ProtoMessage() {}

func (x *GetReportImplementerResp) ProtoReflect() protoreflect.Message {
	mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportImplementerResp.ProtoReflect.Descriptor instead.
func (*GetReportImplementerResp) Descriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{1}
}

func (m *GetReportImplementerResp) GetResult() isGetReportImplementerResp_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetReportImplementerResp) GetImplementer() string {
	if x, ok := x.GetResult().(*GetReportImplementerResp_Implementer); ok {
		return x.Implementer
	}
	return ""
}

func (x *GetReportImplementerResp) GetError() ReportsServiceErrors {
	if x, ok := x.GetResult().(*GetReportImplementerResp_Error); ok {
		return x.Error
	}
	return ReportsServiceErrors_REPORT_NOT_FOUND
}

type isGetReportImplementerResp_Result interface {
	isGetReportImplementerResp_Result()
}

type GetReportImplementerResp_Implementer struct {
	Implementer string `protobuf:"bytes,1,opt,name=implementer,proto3,oneof"`
}

type GetReportImplementerResp_Error struct {
	Error ReportsServiceErrors `protobuf:"varint,2,opt,name=error,proto3,enum=rtuitlab.itlab.reports.v1.ReportsServiceErrors,oneof"`
}

func (*GetReportImplementerResp_Implementer) isGetReportImplementerResp_Result() {}

func (*GetReportImplementerResp_Error) isGetReportImplementerResp_Result() {}

type GetReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportId string `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
}

func (x *GetReportReq) Reset() {
	*x = GetReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportReq) ProtoMessage() {}

func (x *GetReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportReq.ProtoReflect.Descriptor instead.
func (*GetReportReq) Descriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{2}
}

func (x *GetReportReq) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

type GetReportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*GetReportResp_Report
	//	*GetReportResp_Error
	Result isGetReportResp_Result `protobuf_oneof:"result"`
}

func (x *GetReportResp) Reset() {
	*x = GetReportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportResp) ProtoMessage() {}

func (x *GetReportResp) ProtoReflect() protoreflect.Message {
	mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportResp.ProtoReflect.Descriptor instead.
func (*GetReportResp) Descriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{3}
}

func (m *GetReportResp) GetResult() isGetReportResp_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetReportResp) GetReport() *types.Report {
	if x, ok := x.GetResult().(*GetReportResp_Report); ok {
		return x.Report
	}
	return nil
}

func (x *GetReportResp) GetError() ReportsServiceErrors {
	if x, ok := x.GetResult().(*GetReportResp_Error); ok {
		return x.Error
	}
	return ReportsServiceErrors_REPORT_NOT_FOUND
}

type isGetReportResp_Result interface {
	isGetReportResp_Result()
}

type GetReportResp_Report struct {
	Report *types.Report `protobuf:"bytes,1,opt,name=report,proto3,oneof"`
}

type GetReportResp_Error struct {
	Error ReportsServiceErrors `protobuf:"varint,2,opt,name=error,proto3,enum=rtuitlab.itlab.reports.v1.ReportsServiceErrors,oneof"`
}

func (*GetReportResp_Report) isGetReportResp_Result() {}

func (*GetReportResp_Error) isGetReportResp_Result() {}

type GetReportsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default sorting is by name
	SortedBy *GetReportsReq_SortedBy `protobuf:"varint,1,opt,name=sorted_by,json=sortedBy,proto3,enum=rtuitlab.itlab.reports.v1.GetReportsReq_SortedBy,oneof" json:"sorted_by,omitempty"`
}

func (x *GetReportsReq) Reset() {
	*x = GetReportsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportsReq) ProtoMessage() {}

func (x *GetReportsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportsReq.ProtoReflect.Descriptor instead.
func (*GetReportsReq) Descriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{4}
}

func (x *GetReportsReq) GetSortedBy() GetReportsReq_SortedBy {
	if x != nil && x.SortedBy != nil {
		return *x.SortedBy
	}
	return GetReportsReq_NAME
}

type GetReportsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reports []*types.Report `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
}

func (x *GetReportsResp) Reset() {
	*x = GetReportsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportsResp) ProtoMessage() {}

func (x *GetReportsResp) ProtoReflect() protoreflect.Message {
	mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportsResp.ProtoReflect.Descriptor instead.
func (*GetReportsResp) Descriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{5}
}

func (x *GetReportsResp) GetReports() []*types.Report {
	if x != nil {
		return x.Reports
	}
	return nil
}

type GetReportsPaginatedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterParams *GetReportsPaginatedReq_FilterParams  `protobuf:"bytes,1,opt,name=filter_params,json=filterParams,proto3" json:"filter_params,omitempty"`
	OrderParams  []*GetReportsPaginatedReq_OrderParams `protobuf:"bytes,2,rep,name=order_params,json=orderParams,proto3" json:"order_params,omitempty"`
	Pagination   *shared.Pagination                    `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetReportsPaginatedReq) Reset() {
	*x = GetReportsPaginatedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportsPaginatedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportsPaginatedReq) ProtoMessage() {}

func (x *GetReportsPaginatedReq) ProtoReflect() protoreflect.Message {
	mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportsPaginatedReq.ProtoReflect.Descriptor instead.
func (*GetReportsPaginatedReq) Descriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{6}
}

func (x *GetReportsPaginatedReq) GetFilterParams() *GetReportsPaginatedReq_FilterParams {
	if x != nil {
		return x.FilterParams
	}
	return nil
}

func (x *GetReportsPaginatedReq) GetOrderParams() []*GetReportsPaginatedReq_OrderParams {
	if x != nil {
		return x.OrderParams
	}
	return nil
}

func (x *GetReportsPaginatedReq) GetPagination() *shared.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetReportsPaginatedResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reports        []*types.Report        `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
	PaginationInfo *shared.PaginationInfo `protobuf:"bytes,2,opt,name=pagination_info,json=paginationInfo,proto3" json:"pagination_info,omitempty"`
}

func (x *GetReportsPaginatedResp) Reset() {
	*x = GetReportsPaginatedResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportsPaginatedResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportsPaginatedResp) ProtoMessage() {}

func (x *GetReportsPaginatedResp) ProtoReflect() protoreflect.Message {
	mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportsPaginatedResp.ProtoReflect.Descriptor instead.
func (*GetReportsPaginatedResp) Descriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{7}
}

func (x *GetReportsPaginatedResp) GetReports() []*types.Report {
	if x != nil {
		return x.Reports
	}
	return nil
}

func (x *GetReportsPaginatedResp) GetPaginationInfo() *shared.PaginationInfo {
	if x != nil {
		return x.PaginationInfo
	}
	return nil
}

type GetReportsPaginatedReq_FilterParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameMatch     *string                `protobuf:"bytes,1,opt,name=name_match,json=nameMatch,proto3,oneof" json:"name_match,omitempty"`
	ImplementerId *string                `protobuf:"bytes,2,opt,name=implementer_id,json=implementerId,proto3,oneof" json:"implementer_id,omitempty"`
	ReporterId    *string                `protobuf:"bytes,3,opt,name=reporter_id,json=reporterId,proto3,oneof" json:"reporter_id,omitempty"`
	DateBegin     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date_begin,json=dateBegin,proto3,oneof" json:"date_begin,omitempty"`
	DateEnd       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=date_end,json=dateEnd,proto3,oneof" json:"date_end,omitempty"`
	// Default state is ALL
	PaidState *GetReportsPaginatedReq_FilterParams_PaidState `protobuf:"varint,6,opt,name=paid_state,json=paidState,proto3,enum=rtuitlab.itlab.reports.v1.GetReportsPaginatedReq_FilterParams_PaidState,oneof" json:"paid_state,omitempty"`
}

func (x *GetReportsPaginatedReq_FilterParams) Reset() {
	*x = GetReportsPaginatedReq_FilterParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportsPaginatedReq_FilterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportsPaginatedReq_FilterParams) ProtoMessage() {}

func (x *GetReportsPaginatedReq_FilterParams) ProtoReflect() protoreflect.Message {
	mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportsPaginatedReq_FilterParams.ProtoReflect.Descriptor instead.
func (*GetReportsPaginatedReq_FilterParams) Descriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GetReportsPaginatedReq_FilterParams) GetNameMatch() string {
	if x != nil && x.NameMatch != nil {
		return *x.NameMatch
	}
	return ""
}

func (x *GetReportsPaginatedReq_FilterParams) GetImplementerId() string {
	if x != nil && x.ImplementerId != nil {
		return *x.ImplementerId
	}
	return ""
}

func (x *GetReportsPaginatedReq_FilterParams) GetReporterId() string {
	if x != nil && x.ReporterId != nil {
		return *x.ReporterId
	}
	return ""
}

func (x *GetReportsPaginatedReq_FilterParams) GetDateBegin() *timestamppb.Timestamp {
	if x != nil {
		return x.DateBegin
	}
	return nil
}

func (x *GetReportsPaginatedReq_FilterParams) GetDateEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.DateEnd
	}
	return nil
}

func (x *GetReportsPaginatedReq_FilterParams) GetPaidState() GetReportsPaginatedReq_FilterParams_PaidState {
	if x != nil && x.PaidState != nil {
		return *x.PaidState
	}
	return GetReportsPaginatedReq_FilterParams_ALL
}

type GetReportsPaginatedReq_OrderParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    GetReportsPaginatedReq_OrderParams_OrderFields `protobuf:"varint,1,opt,name=field,proto3,enum=rtuitlab.itlab.reports.v1.GetReportsPaginatedReq_OrderParams_OrderFields" json:"field,omitempty"`
	Ordering shared.Ordering                                `protobuf:"varint,2,opt,name=ordering,proto3,enum=rtuitlab.itlab.shared.Ordering" json:"ordering,omitempty"`
}

func (x *GetReportsPaginatedReq_OrderParams) Reset() {
	*x = GetReportsPaginatedReq_OrderParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportsPaginatedReq_OrderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportsPaginatedReq_OrderParams) ProtoMessage() {}

func (x *GetReportsPaginatedReq_OrderParams) ProtoReflect() protoreflect.Message {
	mi := &file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportsPaginatedReq_OrderParams.ProtoReflect.Descriptor instead.
func (*GetReportsPaginatedReq_OrderParams) Descriptor() ([]byte, []int) {
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP(), []int{6, 1}
}

func (x *GetReportsPaginatedReq_OrderParams) GetField() GetReportsPaginatedReq_OrderParams_OrderFields {
	if x != nil {
		return x.Field
	}
	return GetReportsPaginatedReq_OrderParams_NAME
}

func (x *GetReportsPaginatedReq_OrderParams) GetOrdering() shared.Ordering {
	if x != nil {
		return x.Ordering
	}
	return shared.Ordering_ASCENDING
}

var File_rtuitlab_itlab_reports_v1_reports_proto protoreflect.FileDescriptor

var file_rtuitlab_itlab_reports_v1_reports_proto_rawDesc = []byte{
	0x0a, 0x27, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2f, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x72, 0x74, 0x75, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x1a, 0x22, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2f, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x72, 0x74, 0x75, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2f, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x26, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2f, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22,
	0x91, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6d, 0x70,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0b,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x12, 0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2f, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x2b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64,
	0x22, 0x9c, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x47, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x72, 0x74,
	0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x92, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x53, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x79, 0x48, 0x00, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x22, 0x1e, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x22, 0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x22, 0xef, 0x07, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x63, 0x0a, 0x0d, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x60, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x41, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xf9, 0x03, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x04, 0x52, 0x07, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x6c, 0x0a, 0x0a, 0x70, 0x61, 0x69, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x72,
	0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x50, 0x61, 0x69,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x05, 0x52, 0x09, 0x70, 0x61, 0x69, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x22, 0x2c, 0x0a, 0x09, 0x50, 0x61, 0x69, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x41, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x5f, 0x50, 0x41,
	0x49, 0x44, 0x10, 0x02, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65,
	0x6e, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x1a, 0xce, 0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x5f, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x49, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x22,
	0x21, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x01, 0x22, 0xa3, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38,
	0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2a, 0x2c, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x32, 0xcb, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x12, 0x7f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x72, 0x74, 0x75,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x33,
	0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x27, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x72, 0x74, 0x75, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x12, 0x28, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x72, 0x74,
	0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x31, 0x2e,
	0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x32, 0x2e, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x93, 0x01, 0x0a, 0x28, 0x72, 0x74, 0x75, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x52, 0x54,
	0x55, 0x49, 0x54, 0x4c, 0x61, 0x62, 0x2f, 0x49, 0x54, 0x4c, 0x61, 0x62, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0xaa,
	0x02, 0x28, 0x52, 0x54, 0x55, 0x49, 0x54, 0x4c, 0x61, 0x62, 0x2e, 0x49, 0x54, 0x4c, 0x61, 0x62,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x56,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_rtuitlab_itlab_reports_v1_reports_proto_rawDescOnce sync.Once
	file_rtuitlab_itlab_reports_v1_reports_proto_rawDescData = file_rtuitlab_itlab_reports_v1_reports_proto_rawDesc
)

func file_rtuitlab_itlab_reports_v1_reports_proto_rawDescGZIP() []byte {
	file_rtuitlab_itlab_reports_v1_reports_proto_rawDescOnce.Do(func() {
		file_rtuitlab_itlab_reports_v1_reports_proto_rawDescData = protoimpl.X.CompressGZIP(file_rtuitlab_itlab_reports_v1_reports_proto_rawDescData)
	})
	return file_rtuitlab_itlab_reports_v1_reports_proto_rawDescData
}

var file_rtuitlab_itlab_reports_v1_reports_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_rtuitlab_itlab_reports_v1_reports_proto_goTypes = []interface{}{
	(ReportsServiceErrors)(0),                           // 0: rtuitlab.itlab.reports.v1.ReportsServiceErrors
	(GetReportsReq_SortedBy)(0),                         // 1: rtuitlab.itlab.reports.v1.GetReportsReq.SortedBy
	(GetReportsPaginatedReq_FilterParams_PaidState)(0),  // 2: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.FilterParams.PaidState
	(GetReportsPaginatedReq_OrderParams_OrderFields)(0), // 3: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.OrderParams.OrderFields
	(*GetReportImplementerReq)(nil),                     // 4: rtuitlab.itlab.reports.v1.GetReportImplementerReq
	(*GetReportImplementerResp)(nil),                    // 5: rtuitlab.itlab.reports.v1.GetReportImplementerResp
	(*GetReportReq)(nil),                                // 6: rtuitlab.itlab.reports.v1.GetReportReq
	(*GetReportResp)(nil),                               // 7: rtuitlab.itlab.reports.v1.GetReportResp
	(*GetReportsReq)(nil),                               // 8: rtuitlab.itlab.reports.v1.GetReportsReq
	(*GetReportsResp)(nil),                              // 9: rtuitlab.itlab.reports.v1.GetReportsResp
	(*GetReportsPaginatedReq)(nil),                      // 10: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq
	(*GetReportsPaginatedResp)(nil),                     // 11: rtuitlab.itlab.reports.v1.GetReportsPaginatedResp
	(*GetReportsPaginatedReq_FilterParams)(nil),         // 12: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.FilterParams
	(*GetReportsPaginatedReq_OrderParams)(nil),          // 13: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.OrderParams
	(*types.Report)(nil),                                // 14: rtuitlab.itlab.reports.Report
	(*shared.Pagination)(nil),                           // 15: rtuitlab.itlab.shared.Pagination
	(*shared.PaginationInfo)(nil),                       // 16: rtuitlab.itlab.shared.PaginationInfo
	(*timestamppb.Timestamp)(nil),                       // 17: google.protobuf.Timestamp
	(shared.Ordering)(0),                                // 18: rtuitlab.itlab.shared.Ordering
}
var file_rtuitlab_itlab_reports_v1_reports_proto_depIdxs = []int32{
	0,  // 0: rtuitlab.itlab.reports.v1.GetReportImplementerResp.error:type_name -> rtuitlab.itlab.reports.v1.ReportsServiceErrors
	14, // 1: rtuitlab.itlab.reports.v1.GetReportResp.report:type_name -> rtuitlab.itlab.reports.Report
	0,  // 2: rtuitlab.itlab.reports.v1.GetReportResp.error:type_name -> rtuitlab.itlab.reports.v1.ReportsServiceErrors
	1,  // 3: rtuitlab.itlab.reports.v1.GetReportsReq.sorted_by:type_name -> rtuitlab.itlab.reports.v1.GetReportsReq.SortedBy
	14, // 4: rtuitlab.itlab.reports.v1.GetReportsResp.reports:type_name -> rtuitlab.itlab.reports.Report
	12, // 5: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.filter_params:type_name -> rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.FilterParams
	13, // 6: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.order_params:type_name -> rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.OrderParams
	15, // 7: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.pagination:type_name -> rtuitlab.itlab.shared.Pagination
	14, // 8: rtuitlab.itlab.reports.v1.GetReportsPaginatedResp.reports:type_name -> rtuitlab.itlab.reports.Report
	16, // 9: rtuitlab.itlab.reports.v1.GetReportsPaginatedResp.pagination_info:type_name -> rtuitlab.itlab.shared.PaginationInfo
	17, // 10: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.FilterParams.date_begin:type_name -> google.protobuf.Timestamp
	17, // 11: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.FilterParams.date_end:type_name -> google.protobuf.Timestamp
	2,  // 12: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.FilterParams.paid_state:type_name -> rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.FilterParams.PaidState
	3,  // 13: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.OrderParams.field:type_name -> rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.OrderParams.OrderFields
	18, // 14: rtuitlab.itlab.reports.v1.GetReportsPaginatedReq.OrderParams.ordering:type_name -> rtuitlab.itlab.shared.Ordering
	4,  // 15: rtuitlab.itlab.reports.v1.Reports.GetReportImplementer:input_type -> rtuitlab.itlab.reports.v1.GetReportImplementerReq
	6,  // 16: rtuitlab.itlab.reports.v1.Reports.GetReport:input_type -> rtuitlab.itlab.reports.v1.GetReportReq
	8,  // 17: rtuitlab.itlab.reports.v1.Reports.GetReports:input_type -> rtuitlab.itlab.reports.v1.GetReportsReq
	10, // 18: rtuitlab.itlab.reports.v1.Reports.GetReportsPaginated:input_type -> rtuitlab.itlab.reports.v1.GetReportsPaginatedReq
	5,  // 19: rtuitlab.itlab.reports.v1.Reports.GetReportImplementer:output_type -> rtuitlab.itlab.reports.v1.GetReportImplementerResp
	7,  // 20: rtuitlab.itlab.reports.v1.Reports.GetReport:output_type -> rtuitlab.itlab.reports.v1.GetReportResp
	9,  // 21: rtuitlab.itlab.reports.v1.Reports.GetReports:output_type -> rtuitlab.itlab.reports.v1.GetReportsResp
	11, // 22: rtuitlab.itlab.reports.v1.Reports.GetReportsPaginated:output_type -> rtuitlab.itlab.reports.v1.GetReportsPaginatedResp
	19, // [19:23] is the sub-list for method output_type
	15, // [15:19] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_rtuitlab_itlab_reports_v1_reports_proto_init() }
func file_rtuitlab_itlab_reports_v1_reports_proto_init() {
	if File_rtuitlab_itlab_reports_v1_reports_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportImplementerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportImplementerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportsPaginatedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportsPaginatedResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportsPaginatedReq_FilterParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportsPaginatedReq_OrderParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*GetReportImplementerResp_Implementer)(nil),
		(*GetReportImplementerResp_Error)(nil),
	}
	file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*GetReportResp_Report)(nil),
		(*GetReportResp_Error)(nil),
	}
	file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rtuitlab_itlab_reports_v1_reports_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rtuitlab_itlab_reports_v1_reports_proto_goTypes,
		DependencyIndexes: file_rtuitlab_itlab_reports_v1_reports_proto_depIdxs,
		EnumInfos:         file_rtuitlab_itlab_reports_v1_reports_proto_enumTypes,
		MessageInfos:      file_rtuitlab_itlab_reports_v1_reports_proto_msgTypes,
	}.Build()
	File_rtuitlab_itlab_reports_v1_reports_proto = out.File
	file_rtuitlab_itlab_reports_v1_reports_proto_rawDesc = nil
	file_rtuitlab_itlab_reports_v1_reports_proto_goTypes = nil
	file_rtuitlab_itlab_reports_v1_reports_proto_depIdxs = nil
}
